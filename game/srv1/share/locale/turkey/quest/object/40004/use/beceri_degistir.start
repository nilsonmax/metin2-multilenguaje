if pc . count_item ( item . get_vnum ( ) ) < 1 then 
syschat ( "Yeterli miktarda Beceri deðiþim yüzüðüne sahip deðilsin." ) 
return 
end 
if pc . getf ( "skill_reset2" , "skill_bind" ) + get_time ( ) > 0 then 
syschat ( "Becerilerin mühürlenmiþ durumdayken bunu gerçekleþtiremezsin." ) 
return 
end 
if pc . get_skill_group ( ) == 1 then 
G_Degerler = beceri_degistir . SinifBeceri ( pc . get_job ( ) , 2 ) 
G_BeceriDegerleri = beceri_degistir . BeceriKodlari ( pc . get_job ( ) , 2 ) 
elseif pc . get_skill_group ( ) == 2 then 
G_Degerler = beceri_degistir . SinifBeceri ( pc . get_job ( ) , 1 ) 
G_BeceriDegerleri = beceri_degistir . BeceriKodlari ( pc . get_job ( ) , 1 ) 
end 
D_G_Degerler = { } 
D_G_Becerim = { } 
D_B_Denetim = { } 
beceriTipleri = { } 
beceriDegerleri = { } 
for i = 1 , table . getn ( G_Degerler ) , 1 begin D_G_Degerler [ i ] = G_Degerler [ i ] end 
D_G_Degerler [ tonumber ( table . getn ( D_G_Degerler ) ) + 1 ] = "Kapat" 
G_Becerim = beceri_degistir . SinifBeceri ( pc . get_job ( ) , pc . get_skill_group ( ) ) 
for i = 1 , table . getn ( G_Becerim ) , 1 begin D_G_Becerim [ i ] = G_Becerim [ i ] end 
G_BeceriKodlari = beceri_degistir . BeceriKodlari ( pc . get_job ( ) , pc . get_skill_group ( ) ) 
for i = 1 , table . getn ( D_G_Becerim ) + 1 , 1 begin 
if i == table . getn ( D_G_Becerim ) + 1 then 
say_title ( "Bilgilendirme:[WINDOW_SIZE width;350|height;350] " ) 
say ( "" ) 
say ( "Beceri deðiþtirme iþleminiz aþaðýdaki gibi olacaktýr: " ) 
say ( "" ) 
for m = 1 , table . getn ( D_B_Denetim ) , 1 begin 
say_reward ( D_B_Denetim [ m ] ) 
end 
say ( "" ) 
say_reward ( "Onaylýyor musunuz?" ) 
say ( "" ) 
beceriDegisimOnay = select ( "Evet" , "Hayýr" ) 
if beceriDegisimOnay == 1 then 
if pc . get_skill_group ( ) == 1 then 
pc . set_skill_group ( 2 ) 
elseif pc . get_skill_group ( ) == 2 then 
pc . set_skill_group ( 1 ) 
end 
say_title ( "Bilgilendirme: " ) 
say ( "" ) 
say ( "Ýþlem yapýlýyor[DELAY value;2500]...[/DELAY]" ) 
say ( "" ) 
say_reward ( "Ýþlem baþarýlý!" ) 
say ( "" ) 
wait ( ) 
item . remove ( 1 ) 
for u = 1 , table . getn ( beceriTipleri ) , 1 begin 
pc . set_skill_level ( beceriTipleri [ u ] , beceriDegerleri [ u ] ) 
end 
warp_to_village ( pc . get_map_index ( ) ) 
elseif beceriDegisimOnay == 2 then 
return 
end 
else 
say_title ( "Bilgilendirme:[WINDOW_SIZE width;350|height;375] " ) 
say ( "" ) 
say_reward ( "Seçilen beceriniz: " .. D_G_Becerim [ i ] ) 
say_reward ( "Seçilen beceri durumu: " .. beceri_degistir . BeceriDurumu ( pc . get_skill_level ( G_BeceriKodlari [ i ] ) ) ) 
say ( "" ) 
say_reward ( "Hangi beceriye aktarmak istiyorsunuz?" ) 
say ( "" ) 
D_G_DegerlerTPL = table . getn ( D_G_Degerler ) 
beceri_secim = select_table ( D_G_Degerler ) 
if beceri_secim ~= D_G_DegerlerTPL then 
table . insert ( beceriTipleri , G_BeceriDegerleri [ beceri_secim ] ) 
table . insert ( beceriDegerleri , pc . get_skill_level ( G_BeceriKodlari [ i ] ) ) 
table . insert ( D_B_Denetim , D_G_Becerim [ i ] .. "(" .. beceri_degistir . BeceriDurumu ( pc . get_skill_level ( G_BeceriKodlari [ i ] ) ) .. ") --> " .. D_G_Degerler [ beceri_secim ] ) 
table . remove ( D_G_Degerler , beceri_secim ) 
table . remove ( G_BeceriDegerleri , beceri_secim ) 
else 
return 
end 
end 
end 
